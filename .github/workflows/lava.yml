name: Lava Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    strategy:
      matrix:
        binary: [lavad, lavap, lavavisor]
        targetos: [darwin, linux]
        arch: [amd64, arm64]
    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.targetos }}
      GOARCH: ${{ matrix.arch }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum

      - name: Run GoReleaser
        id: releaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: build --single-target --snapshot --clean
          workdir: cmd/${{ matrix.binary }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.binary }}-${{ fromJson(steps.releaser.outputs.metadata).tag }}-${{ fromJson(steps.releaser.outputs.artifacts)[0].goos }}-${{ fromJson(steps.releaser.outputs.artifacts)[0].goarch }}
          path: cmd/${{ matrix.binary }}/${{ fromJson(steps.releaser.outputs.artifacts)[0].path }}

      # - name: Docker meta
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: |
      #       lava/${{ matrix.binary }}
      #       ghcr.io/lavanet/${{ matrix.binary }}
      #     tags: |
      #       type=raw,value=latest,enable={{is_default_branch}}
      #       type=schedule
      #       type=ref,event=branch
      #       type=ref,event=pr
      #       type=semver,pattern={{version}}
      #       type=semver,pattern={{major}}.{{minor}}
      #       type=semver,pattern={{major}}
      #       type=sha            
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
      # - name: Build and push
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
          