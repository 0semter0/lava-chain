---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{- include "provider.fullname" }}
  labels:
    lavanet.xyz/node_moniker:  {{- include "provider.moniker" }}
    lavanet.xyz/node_type: "provider"
    {{- include "provider.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      lavanet.xyz/node_moniker:  {{- include "provider.moniker" }}
      lavanet.xyz/node_type: "provider"
      {{- include "provider.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        lavanet.xyz/node_moniker:  {{- include "provider.moniker" }}
        lavanet.xyz/node_type: "provider"
        {{- include "provider.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{- include "provider.fullname" }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          {{- range .Values.extraSecretMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
          {{- end }}
          {{- range .Values.extraConfigMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
          {{- end }}
            - name: data-volume
              mountPath: {{ .Values.persistentVolume.mountPath }}
              subPath: "{{ .Values.persistentVolume.subPath }}"
          {{- with .Values.envFrom }}
          envFrom: 
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env: 
            - name: LOG_LEVEL
              value: {{ .Values.logLevel }}
          {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: {{ .Values.port.name }}
              containerPort: {{ .Values.port.number }}
              protocol: {{ .Values.port.protocol }}
          {{- with .Values.commmand.name }}
          command: 
            - {{ . | quote }}
          {{- end }}
          {{- with .Values.commmand.args }}
          args:
            {{- toYaml . | nindent 12 -}}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- range .Values.extraSecretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
            {{- with .optional }}
            optional: {{ . }}
            {{- end }}
        {{- end }}
        {{- range .Values.extraConfigMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
            {{- with .optional }}
            optional: {{ . }}
            {{- end }}
        {{- end }}
        - name: data-volume
        {{- if .Values.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistentVolume.existingClaim }}{{ .Values.persistentVolume.existingClaim }}{{- else }} {{- include "provider.fullname" }}-pvc {{- end }}
        {{- else }}
          emptyDir:
          {{- if .Values.emptyDir.sizeLimit }}
            sizeLimit: {{ .Values.emptyDir.sizeLimit }}
          {{- else }}
            {}
          {{- end -}}
        {{- end -}}