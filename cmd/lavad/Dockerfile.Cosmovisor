# syntax=docker/dockerfile:1

ARG GO_VERSION="1.20"
ARG RUNNER_IMAGE="gcr.io/distroless/static-debian12"
ARG BUILD_TAGS="netgo,ledger,muslc"
ARG COSMOVISOR_VERSION="v1.5.0"

FROM golang:${GO_VERSION}-alpine3.18 as builder

RUN apk add --no-cache \
    ca-certificates \
    build-base \
    linux-headers \
    binutils-gold

WORKDIR /lava

COPY go.mod go.sum ./

RUN --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/root/go/pkg/mod \
    go mod download

COPY . .

ARG GIT_VERSION
ARG GIT_COMMIT

RUN --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/root/go/pkg/mod \
    GOWORK=off go build \
    -mod=readonly \
    -tags "netgo,ledger,muslc" \
    -ldflags \
    "-X github.com/cosmos/cosmos-sdk/version.Name="lava" \
    -X github.com/cosmos/cosmos-sdk/version.AppName="lavad" \
    -X github.com/cosmos/cosmos-sdk/version.Version=${GIT_VERSION} \
    -X github.com/cosmos/cosmos-sdk/version.Commit=${GIT_COMMIT} \
    -X github.com/cosmos/cosmos-sdk/version.BuildTags=${BUILD_TAGS} \
    -w -s -linkmode=external -extldflags '-Wl,-z,muldefs -static'" \
    -trimpath \
    -o /lava/build/lavad \
    /lava/cmd/lavad/main.go

RUN go install cosmossdk.io/tools/cosmovisor/cmd/cosmovisor@${COSMOVISOR_VERSION}

FROM ${RUNNER_IMAGE}

COPY --from=builder /lava/build/lavad /bin/lavad
COPY --from=builder /go/bin/cosmovisor /bin/cosmovisor

ENV HOME /lava

ENV DAEMON_NAME lavad
ENV DAEMON_HOME ${HOME}/.lavad
ENV DAEMON_ALLOW_DOWNLOAD_BINARIES true
ENV DAEMON_RESTART_AFTER_UPGRADE true 
ENV DAEMON_LOG_BUFFER_SIZE 512
ENV UNSAFE_SKIP_BACKUP true

WORKDIR $HOME

# lava api
EXPOSE 1317
# rosetta
EXPOSE 8080
# grpc
EXPOSE 9090
EXPOSE 9091
# tendermint p2p
EXPOSE 26656
# tendermint rpc
EXPOSE 26657

ENTRYPOINT ["cosmovisor"]