syntax = "proto3";
package lavanet.lava.spec;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "spec/params.proto";
import "spec/spec.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/lavanet/lava/x/spec/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/lavanet/lava/spec/params";
  }
  // Queries a Spec by id.
	rpc Spec(QueryGetSpecRequest) returns (QueryGetSpecResponse) {
		option (google.api.http).get = "/lavanet/lava/spec/spec/{index}";
	}

	// Queries a list of Spec items.
	rpc SpecAll(QueryAllSpecRequest) returns (QueryAllSpecResponse) {
		option (google.api.http).get = "/lavanet/lava/spec/spec";
	}

// Queries a list of Chain items.
	rpc Chain(QueryChainRequest) returns (QueryChainResponse) {
		option (google.api.http).get = "/lavanet/lava/spec/chain/{chainID}";
	}

// Queries a list of ShowAllChains items.
	rpc ShowAllChains(QueryShowAllChainsRequest) returns (QueryShowAllChainsResponse) {
		option (google.api.http).get = "/lavanet/lava/spec/show_all_chains";
	}

// Queries a list of ShowChainInfo items.
	rpc ShowChainInfo(QueryShowChainInfoRequest) returns (QueryShowChainInfoResponse) {
		option (google.api.http).get = "/lavanet/lava/spec/show_chain_info/{chainName}";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetSpecRequest {
	string index = 1;
}

message QueryGetSpecResponse {
	Spec Spec = 1 [(gogoproto.nullable) = false];
}

message QueryAllSpecRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSpecResponse {
	repeated Spec Spec = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryChainRequest {
  string chainID = 1;
}

message QueryChainResponse {
  Spec spec = 1 [(gogoproto.nullable) = false];
}

message QueryShowAllChainsRequest {
}

message QueryShowAllChainsResponse {
  repeated string chainNames = 1;
}

message QueryShowChainInfoRequest {
  string chainName = 1;
}

message apiList {
	string interface = 4;
	repeated string supportedApis = 5;
}

message QueryShowChainInfoResponse {
	string chainID = 1;
	repeated string interfaces = 2;
	repeated apiList supportedApisInterfaceList = 3;
  }

// this line is used by starport scaffolding # 3
