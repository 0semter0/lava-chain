syntax = "proto3";
package lavanet.lava.pairing;
import "gogoproto/gogo.proto";

option go_package = "github.com/lavanet/lava/x/pairing/types";

service Relayer {
    rpc Relay (RelayRequest) returns (RelayReply) {}
}

message RelayRequest {
    string chainID = 1;
    string connection_type = 2;
    string api_url = 3; // some relays have associated urls that are filled with params ('/block/{height}')
    uint64 session_id = 4;
    uint64 cu_sum = 5; // total compute unit used including this relay

    bytes data = 6;
    bytes sig = 7;
    string provider = 8;
    int64 block_height = 9;
    uint64 relay_num = 10;
    int64 request_block = 11;

    VRFData DataReliability = 12;
    QualityOfServiceReport QoSReport = 13;
}

message RelayReply {
    bytes data = 1;
    bytes sig = 2; // sign the data hash+query hash+nonce
    uint32 nonce = 3;
    int64 latest_block = 4;
    bytes finalized_blocks_hashes = 5;
    bytes sig_blocks = 6; //sign latest_block+finalized_blocks_hashes+session_id+block_height+relay_num
}

message VRFData {
    bool differentiator = 1;
    bytes vrf_value =2;
    bytes vrf_proof =3;
    bytes provider_sig = 4;
    bytes allDataHash = 5;
    bytes queryHash = 6; //we only need it for payment later
    bytes sig =7;
}

message QualityOfServiceReport{
    string latency = 1 [
        (gogoproto.moretags) = "yaml:\"Latency\"",
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable)   = false
        ];
    string availability  = 2 [
        (gogoproto.moretags) = "yaml:\"availability\"",
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable)   = false
        ];
    string sync = 3 [
        (gogoproto.moretags) = "yaml:\"sync\"",
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable)   = false
        ];
}