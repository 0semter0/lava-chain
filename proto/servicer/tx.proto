syntax = "proto3";
package lavanet.lava.servicer;

// this line is used by starport scaffolding # proto/tx/import
import "servicer/block_num.proto";
import "servicer/work_proof.proto";
import "servicer/client_request.proto";
import "servicer/session_id.proto";
import "servicer/spec_name.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/lavanet/lava/x/servicer/types";

// Msg defines the Msg service.
service Msg {
      rpc StakeServicer(MsgStakeServicer) returns (MsgStakeServicerResponse);
  rpc UnstakeServicer(MsgUnstakeServicer) returns (MsgUnstakeServicerResponse);
  rpc ProofOfWork(MsgProofOfWork) returns (MsgProofOfWorkResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgStakeServicer {
  string creator = 1;
  SpecName spec = 2;
  cosmos.base.v1beta1.Coin amount = 3 [(gogoproto.nullable) = false];
  BlockNum deadline = 4;
}

message MsgStakeServicerResponse {
}

message MsgUnstakeServicer {
  string creator = 1;
  SpecName spec = 2;
  BlockNum deadline = 3;
}

message MsgUnstakeServicerResponse {
}

message MsgProofOfWork {
  string creator = 1;
  SpecName spec = 2;
  SessionID session = 3;
  ClientRequest clientRequest = 4;
  WorkProof workProof = 5;
  uint64 computeUnits = 6;
  BlockNum blockOfWork = 7;
}

message MsgProofOfWorkResponse {
}

// this line is used by starport scaffolding # proto/tx/message