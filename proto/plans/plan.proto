syntax = "proto3";
package lavanet.lava.plans;

option go_package = "github.com/lavanet/lava/x/plans/types";
option (gogoproto.equal_all) = true;
import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

message Plan {
    reserved 10;
    string index = 1;
    reserved 2; // deprecated "duration"
    uint64 block = 3; // the epoch that this plan was created
    cosmos.base.v1beta1.Coin price = 4 [(gogoproto.nullable) = false]; // plan price (in ulava)
    reserved 5; // max CU for the whole plan duration
    reserved 6; // max CU per epoch for the whole plan duration
    reserved 7; // max providers to be paired in an epoch
    bool allow_overuse = 8; // allow CU overuse flag
    uint64 overuse_rate = 9; // price of CU overuse
    string description = 11; // plan description (for humans)
    string type = 12; // plan type
    uint64 annual_discount_percentage = 13; // discount for buying the plan for a year
    Policy plan_policy = 14 [(gogoproto.nullable) = false];
}

// the enum below determines the pairing algorithm's behaviour with the selected providers feature
enum SELECTED_PROVIDERS_MODE {
    ALLOWED = 0;    // no providers restrictions
    MIXED = 1;      // use the selected providers mixed with randomly chosen providers
    EXCLUSIVE = 2;  // use only the selected providers
    DISABLED = 3;   // selected providers feature is disabled
}

// protobuf expected in YAML format: used "moretags" to simplify parsing
message Policy {
    repeated ChainPolicy chain_policies = 1 [(gogoproto.nullable) = false, (gogoproto.moretags) = "mapstructure:\"chain_policies\""];
    uint64 geolocation_profile = 2 [(gogoproto.moretags) = "mapstructure:\"geolocation_profile\"", (gogoproto.jsontag) = "geolocation_profile"];
    uint64 total_cu_limit = 3 [(gogoproto.moretags) = "mapstructure:\"total_cu_limit\"", (gogoproto.jsontag) = "total_cu_limit"];
    uint64 epoch_cu_limit = 4 [(gogoproto.moretags) = "mapstructure:\"epoch_cu_limit\"", (gogoproto.jsontag) = "epoch_cu_limit"];
    uint64 max_providers_to_pair = 5 [(gogoproto.jsontag) = "max_providers_to_pair", (gogoproto.moretags) = "mapstructure:\"max_providers_to_pair\""];
    SELECTED_PROVIDERS_MODE selected_providers_mode = 6 [(gogoproto.moretags) = "mapstructure:\"selected_providers_mode\"", (gogoproto.jsontag) = "selected_providers_mode"];
    repeated string selected_providers = 7 [(gogoproto.moretags) = "mapstructure:\"selected_providers\"", (gogoproto.jsontag) = "selected_providers"];
}

message ChainPolicy {
    string chain_id = 1 [(gogoproto.moretags) = "mapstructure:\"chain_id\""];
    repeated string apis = 2 [(gogoproto.nullable) = false, (gogoproto.moretags) = "mapstructure:\"apis\""];
}

// The geolocations' values are powers of 2 that act as a bit map. Also, the 
// geolocations order is alphabetically (with the exception of the global fields
// that are always the start and end of the list).
//
// To add a new geolocation, put it on the list alphabetically, and assign it with 
// a value that is a power of 2 (fix other values as needed).
enum Geolocation {
    GLS = 0; // Global-strict
    AF = 0x1;
    AS = 0x2;
    AU = 0x4;  // (includes NZ)
    EU = 0x8;
    USC = 0x10; // US-Center
    USE = 0x20; // US-East	
    USW = 0x40; // US-West
    GL = 0xFFFF; // Global
}